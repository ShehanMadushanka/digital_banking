/// Flutter icons CDBIcons
/// Copyright (C) 2022 by original authors @ fluttericon.com, fontello.com
/// This font was generated by FlutterIcon.com, which is derived from Fontello.
///
/// To use this font, place it in your fonts/ directory and include the
/// following in your pubspec.yaml
///
/// flutter:
///   fonts:
///    - family:  CDBIcons
///      fonts:
///       - asset: fonts/CDBIcons.ttf
///
/// 
///
import 'package:flutter/widgets.dart';

class CDBIcons {
  CDBIcons._();

  static const _kFontFam = 'CDBIcons';
  static const String _kFontPkg = null;

  static const IconData ic_info_edit = IconData(0xe800, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData briefcase = IconData(0xe801, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData group_685 = IconData(0xe802, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData group_1160 = IconData(0xe803, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData vector__1_ = IconData(0xe804, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData vector__3_ = IconData(0xe805, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData vector = IconData(0xe806, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData vector__2_ = IconData(0xe807, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData vector__4_ = IconData(0xe808, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData ic_wallet_unselected = IconData(0xe809, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData ic_wallet_selected = IconData(0xe80a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData ic_portfolio_selected = IconData(0xe80b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData ic_delete = IconData(0xe80c, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData ic_download = IconData(0xe80d, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData ic_share = IconData(0xe80e, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData ic_close = IconData(0xe80f, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData ic_filter = IconData(0xe811, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData ic_selec_all_unfilled = IconData(0xe812, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData ic_save_unfilled = IconData(0xe813, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData ic_save_filled = IconData(0xe814, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData ic_trash = IconData(0xe815, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData ic_ongoing_filled = IconData(0xe817, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData ic_upcoming_filled = IconData(0xe819, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData ic_ongoing = IconData(0xe81a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData ic_upcoming = IconData(0xe81b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData ic_printer = IconData(0xe834, fontFamily: _kFontFam, fontPackage: _kFontPkg);
}
